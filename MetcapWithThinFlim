Shader "Unlit/MatCapCode"
{
    Properties
    {
        _MainTex ("Diffuse", 2D) = "white" {}
        _MatcapTex1("MatCapTex1",2D)="white" {}
        _01MatIntensity("Mat1Intensity",float)=1.0
        _MatcapTex2("MatCapTex2",2D)="white" {}
        _02MatIntensity("Mat2Intensity" ,float)=1.0        

        _Ramp("Ramp",2D)="white"{}
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
                float3 normal: NORMAL;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
                float3 worldNormal: TEXCOORD1;
                float3 worldPos: TEXCOORD2;
            };

            sampler2D _MainTex;
            float4 _MainTex_ST;
            sampler2D _MatcapTex1;
            float _01MatIntensity;
            sampler2D _MatcapTex2;
            float _02MatIntensity;
            sampler2D _Ramp;
            float4 _Ramp_ST;

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = TRANSFORM_TEX(v.uv, _MainTex);
                o.worldNormal=UnityObjectToWorldNormal(v.normal);
                o.worldPos=mul(unity_ObjectToWorld,v.vertex);
                return o;
            }

            fixed4 frag (v2f i) : SV_Target
            {
                //Fresnel
                float3 N =normalize(i.worldNormal);
                float3 V= normalize(_WorldSpaceCameraPos-i.worldPos);
                float NdotV=saturate(dot(N,V));
                float Fresnel=1.0-NdotV;
                float2 UVramp=float2(Fresnel,0.5);
                fixed4 Ramp_col=tex2D(_Ramp,UVramp);
                //MATCAP
                float3 normal_view=mul(UNITY_MATRIX_V,float4(i.worldNormal,0.0));
                float2 UVmatCap=0.5*(normal_view.xy+float2(1.0,1.0));
                fixed4 MatCap_col = tex2D(_MatcapTex1, UVmatCap)*_01MatIntensity;
                fixed4 MatCap_col2 = tex2D(_MatcapTex2, UVmatCap)*_02MatIntensity;
                //Diffuse
                fixed4 col = tex2D(_MainTex, i.uv);
                fixed4 combined_col=MatCap_col*col*Ramp_col;
                return combined_col+MatCap_col2;
                //return col;
            }
            ENDCG
        }
    }
}
